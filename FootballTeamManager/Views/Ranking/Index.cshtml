@using FootballTeamManager.ViewModels
@model List<RankingDisplayViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Ranking</h2>

<table id="ranking" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Miejsce</th>
        <th style="display:none;">Miejsce2 </th>
        <th>Zawodnik</th>
        <th>Mecze</th>
        <th>Wygrane</th>
        <th>Remisy</th>
        <th>Porażki</th>
        <th>Skill</th>
    </tr>
    </thead>
    <tbody>
    @for (int i = 0; i<Model.Count(); i++)
    {
        <tr class ="@GetClassFromLevel(Model[i].Change,i)">
            <td>@Model[i].PlayerRanking.Place (@Model[i].ChangeAmount)</td>
            <td style="display:none;">@Model[i].PlayerRanking.Place</td>
            <td>@Html.ActionLink(Model[i].Player.Name, "Details", "Player", new {Id = Model[i].Player.Id}, null)</td>
            <td>@Model[i].PlayerRanking.Matches</td>
            <td>@Model[i].PlayerRanking.Wins</td>
            <td>@Model[i].PlayerRanking.Draws</td>
            <td>@Model[i].PlayerRanking.Loses</td>
            <td>@Model[i].PlayerRanking.Player.Skill</td>
        </tr>
    }
    </tbody>
</table>

@functions{
    public string GetClassFromLevel(Change change, int i)
    {
        if (i==0)
        {
            return "warning";
        }
        switch (change)
        {
            case Change.Increase:
                return "success";
            case Change.Fall:
                return "danger";
            case Change.Maintain:
                return "info";
            case Change.New:
                return "info";
            default:
                return "info";
        }
    }
}

@section scripts
{
    <script>
        $(function() {
            $("#ranking").dataTable({
                "columnDefs": [
                    { "orderData": 1, "targets": [0] }
                ]
            });
        })
    </script>
}

